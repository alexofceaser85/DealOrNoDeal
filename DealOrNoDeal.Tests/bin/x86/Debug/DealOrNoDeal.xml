<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DealOrNoDeal</name>
    </assembly>
    <members>
        <member name="T:DealOrNoDeal.App">
            <summary>
                Provides application-specific behavior to supplement the default Application class.
            </summary>
        </member>
        <member name="M:DealOrNoDeal.App.#ctor">
            <summary>
                Initializes the singleton application object.  This is the first line of authored code
                executed, and as such is the logical equivalent of main() or WinMain().
            </summary>
        </member>
        <member name="M:DealOrNoDeal.App.OnLaunched(Windows.ApplicationModel.Activation.LaunchActivatedEventArgs)">
            <summary>
                Invoked when the application is launched normally by the end user.  Other entry points
                will be used such as when the application is launched to open a specific file.
            </summary>
            <param name="e">Details about the launch request and process.</param>
        </member>
        <member name="M:DealOrNoDeal.App.OnNavigationFailed(System.Object,Windows.UI.Xaml.Navigation.NavigationFailedEventArgs)">
            <summary>
                Invoked when Navigation to a certain page fails
            </summary>
            <param name="sender">The Frame which failed navigation</param>
            <param name="e">Details about the navigation failure</param>
        </member>
        <member name="M:DealOrNoDeal.App.OnSuspending(System.Object,Windows.ApplicationModel.SuspendingEventArgs)">
            <summary>
                Invoked when application execution is being suspended.  Application state is saved
                without knowing whether the application will be terminated or resumed with the contents
                of memory still intact.
            </summary>
            <param name="sender">The source of the suspend request.</param>
            <param name="e">Details about the suspend request.</param>
        </member>
        <member name="M:DealOrNoDeal.App.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:DealOrNoDeal.App.GetXamlType(System.Type)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:DealOrNoDeal.App.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:DealOrNoDeal.App.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
        <member name="T:DealOrNoDeal.ErrorMessages.BriefcaseErrorMessages">
            <summary>
                Holds the error messages for the Briefcase class.
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.BriefcaseErrorMessages.BriefCaseIdCannotBeLessThanZero">
            <summary>
                The brief case identifier cannot be zero or less
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.BriefcaseErrorMessages.DollarAmountCannotBeLessThanZero">
            <summary>
                The dollar amount cannot be less than zero
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.BriefcaseErrorMessages.CannotSetBriefcaseIdToLessThanZero">
            <summary>
            The cannot set briefcase identifier to less than zero
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.BriefcaseErrorMessages.CannotSetDollarAmountToLessThanZero">
            <summary>
            The cannot set dollar amount to less than zero
            </summary>
        </member>
        <member name="T:DealOrNoDeal.ErrorMessages.GameManagerErrorMessages">
            <summary>
            Holds the error messages for the game manager
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.GameManagerErrorMessages.ShouldNotSetCurrentRoundToLessThanOne">
            <summary>
            The error message that tells the user that they should not set current round to less than one
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.GameManagerErrorMessages.ShouldNotSetCasesLeftForCurrentRoundToLessThanZero">
            <summary>
            The error message that tells the user that they should not set cases left for current round to less than zero
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.GameManagerErrorMessages.ShouldNotSetPlaySelectedStartingCaseToLessThanNegativeOne">
            <summary>
            The error message that tells the user that they should not set play selected starting case to less than zero
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.GameManagerErrorMessages.ShouldNotSetBankerCurrentOfferToLessThanZero">
            <summary>
            The error message that tells the user that they should not set initial banker current offer to less than zero
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.GameManagerErrorMessages.ShouldNotSetBankerMinimumOfferToLessThanZero">
            <summary>
            The error message that tells the user that they should not set banker minimum offer to less than zero
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.GameManagerErrorMessages.ShouldNotSetBankerMinimumOfferToMoreThanMaximumOffer">
            <summary>
            The error message that tells the user that they should not set banker minimum offer to more than maximum offer
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.GameManagerErrorMessages.ShouldNotSetBankerMaximumOfferToLessThanZero">
            <summary>
            The error message that tells the user that they should not set banker maximum offer to less than zero
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.GameManagerErrorMessages.ShouldNotSetBankerMaximumOfferToLessThanMinimumOffer">
            <summary>
            The error message that tells the user that they should not set banker maximum offer to less than minimum offer
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.GameManagerErrorMessages.ShouldNotPopulateBriefcasesIfIndexesOfDollarValuesAreNull">
            <summary>
            The error message that tells the user that they should not populate briefcases if indexes of dollar values are null
            </summary>
        </member>
        <member name="F:DealOrNoDeal.ErrorMessages.GameManagerErrorMessages.ShouldNotPopulateBriefcasesIfDollarValuesAreNull">
            <summary>
            The error message that tells the user that they should not populate briefcases if dollar values are null
            </summary>
        </member>
        <member name="T:DealOrNoDeal.Model.Banker">
            <summary>
            Holds the data for the game banker
            </summary>
        </member>
        <member name="M:DealOrNoDeal.Model.Banker.CalculateBankerOffer(System.Collections.Generic.IList{DealOrNoDeal.Model.Briefcase},System.Int32)">
            <summary>
            Calculates the offer from the banker
            </summary>
            <param name="briefcasesStillInPlay">The briefcases that are still in play</param>
            <param name="numberOfCasesToOpenInNextRound">The number of cases that can be opened in the next round</param>
            <returns>The amount of money which will be offered by the banker</returns>
        </member>
        <member name="T:DealOrNoDeal.Model.Briefcase">
            <summary>
                Holds the data for each briefcase
            </summary>
        </member>
        <member name="P:DealOrNoDeal.Model.Briefcase.BriefcaseId">
            <summary>
                The briefcase identifier.
            </summary>
        </member>
        <member name="P:DealOrNoDeal.Model.Briefcase.DollarAmount">
            <summary>
                The dollar amount
            </summary>
        </member>
        <member name="M:DealOrNoDeal.Model.Briefcase.#ctor(System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:DealOrNoDeal.Model.Briefcase" /> class.
            </summary>
            <precondition>
                briefcaseId &gt;= 0
                dollarAmount &gt;= 0
            </precondition>
            <postcondition>
                this.BriefcaseId == briefcaseId
                this.DollarAmount == dollarAmount
            </postcondition>
            <param name="briefcaseId">The briefcase identifier.</param>
            <param name="dollarAmount">The dollar amount.</param>
        </member>
        <member name="T:DealOrNoDeal.Model.GameManager">
            <summary>Handles the management of the actual game play.</summary>
        </member>
        <member name="P:DealOrNoDeal.Model.GameManager.IsSelectingStartingCase">
            <summary>
                True if the player is selected their starting case, false if they already selected their starting case
                Precondition: None
                Postcondition: None
            </summary>
        </member>
        <member name="P:DealOrNoDeal.Model.GameManager.CurrentRound">
            <summary>
                The current round that the game is on
                Precondition:
                value >= 1
                Postcondition:
                this.currentRound == value
            </summary>
            <value>The game's current round.</value>
        </member>
        <member name="P:DealOrNoDeal.Model.GameManager.CasesAvailableForCurrentRound">
            <summary>
                The number of cases that are available for selection by the player for each new round
                Precondition: None
                Postcondition: None
            </summary>
        </member>
        <member name="P:DealOrNoDeal.Model.GameManager.CasesLeftForCurrentRound">
            <summary>
                The cases left for the game's current round
                Precondition:
                value >= 0
                Postcondition:
                this.casesLeftForCurrentRound == value
            </summary>
            <value>The cases left for current round.</value>
        </member>
        <member name="P:DealOrNoDeal.Model.GameManager.PlayerSelectedStartingCase">
            <summary>
                The case that is selected by the player at the start of the game
            </summary>
            Precondition:
            value >= InitialPlayerSelectedStartingCase
            Postcondition:
            this.playerSelectedStartingCase == value
            <value>The case selected by the player at the start of the game.</value>
        </member>
        <member name="P:DealOrNoDeal.Model.GameManager.BankerCurrentOffer">
            <summary>
                The current banker offer.
                Precondition:
                value >= 0
                Postcondition:
                this.bankerCurrentOffer == value
            </summary>
            <value>The banker's current offer.</value>
        </member>
        <member name="P:DealOrNoDeal.Model.GameManager.BankerMinimumOffer">
            <summary>
                The lowest offer the banker offered throughout the game
                Precondition:
                value  >= 0
                AND value >= this.BankerMinimumOffer OR this.BankerMinimumOffer == InitialBankerMinimumOffer
                Postcondition:
                this.bankerMinimumOffer == value
            </summary>
            <value>The minimum banker offer.</value>
        </member>
        <member name="P:DealOrNoDeal.Model.GameManager.BankerMaximumOffer">
            <summary>
                The highest offer the banker offered throughout the game
                Precondition:
                value >= 0
                AND value >= this.BankerMaximumOffer OR this.BankerMaximumOffer == InitialBankerMaximumOffer
                Postcondition:
                this.bankerMaximumOffer == value
            </summary>
            <value>The maximum banker offer.</value>
        </member>
        <member name="M:DealOrNoDeal.Model.GameManager.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:DealOrNoDeal.Model.GameManager" /> class.
                Precondition: None
                Postcondition:
                this.theBriefcases.Count > 0
                AND this.CurrentRound == InitialCurrentRound;
                AND this.CasesLeftForCurrentRound == InitialCasesLeftForCurrentRound;
                AND this.PlayerSelectedStartingCase == InitialPlayerSelectedStartingCase;
                AND this.BankerCurrentOffer == InitialBankerCurrentOffer;
                AND this.BankerMinimumOffer == InitialBankerMinimumOffer;
                AND this.BankerMaximumOffer == InitialBankerMaximumOffer;
            </summary>
        </member>
        <member name="M:DealOrNoDeal.Model.GameManager.PopulateBriefcases(System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32})">
            <summary>
                Populates the briefcases
                Precondition:
                indexesOfDollarValuesToPopulate != null
                AND dollarValuesToPopulate != null
                Postcondition:
                this.theBriefcases = thePopulatedBriefcases
            </summary>
            <param name="indexesOfDollarValuesToPopulate">
                The index of the array element which is used to get a value from the
                dollar values
            </param>
            <param name="dollarValuesToPopulate">The dollar values which are to be accessed</param>
            <return>The populated briefcases</return>
        </member>
        <member name="M:DealOrNoDeal.Model.GameManager.GetBriefcaseValue(System.Int32)">
            <summary>
                Gets the briefcase value.
                Precondition: None
                Postcondition: None
            </summary>
            <param name="briefcaseIdToGet">The briefcase identifier to get.</param>
            <returns>
                the dollar amount of the briefcase that has been selected, -1 if the briefcase Id is not present in the briefcases
            </returns>
        </member>
        <member name="M:DealOrNoDeal.Model.GameManager.RemoveBriefcaseFromPlay(System.Int32)">
            <summary>
                Removes the specified briefcase from play.
                Precondition: None
                Postcondition: None
            </summary>
            <param name="id">The id of the briefcase to remove from play.</param>
            <returns>Dollar amount stored in the case, or -1 if case not found.</returns>
        </member>
        <member name="M:DealOrNoDeal.Model.GameManager.GetOffer">
            <summary>
                Gets the banker offer
                Precondition: None
                Postcondition: None
            </summary>
            <returns>The current banker offer</returns>
        </member>
        <member name="M:DealOrNoDeal.Model.GameManager.MoveToNextRound">
            <summary>
                Moves to next round by incrementing Round property and setting
                initial number of cases for that round
                Precondition: None
                Postcondition:
                Round == Round@prev + 1
                AND CasesRemainingInRound == (number of cases to open in the next round)
            </summary>
        </member>
        <member name="T:DealOrNoDeal.View.DealOrNoDealPage">
            <summary>
                An empty page that can be used on its own or navigated to within a Frame.
            </summary>
        </member>
        <member name="F:DealOrNoDeal.View.DealOrNoDealPage.ApplicationHeight">
            <summary>
                The application height
            </summary>
        </member>
        <member name="F:DealOrNoDeal.View.DealOrNoDealPage.ApplicationWidth">
            <summary>
                The application width
            </summary>
        </member>
        <member name="M:DealOrNoDeal.View.DealOrNoDealPage.#ctor">
            <summary>
                Instantiates a new viewable game page for the Deal or No Deal game
                Precondition: None
                Postcondition: None
            </summary>
        </member>
        <member name="M:DealOrNoDeal.View.DealOrNoDealPage.InitializeComponent">
            <summary>
            InitializeComponent()
            </summary>
        </member>
        <member name="M:DealOrNoDeal.View.DealOrNoDealPage.Connect(System.Int32,System.Object)">
            <summary>
            Connect()
            </summary>
        </member>
        <member name="M:DealOrNoDeal.View.DealOrNoDealPage.GetBindingConnector(System.Int32,System.Object)">
            <summary>
            GetBindingConnector(int connectionId, object target)
            </summary>
        </member>
        <member name="T:DealOrNoDeal.Program">
            <summary>
            Program class
            </summary>
        </member>
        <member name="T:DealOrNoDeal.DealOrNoDeal_XamlTypeInfo.XamlMetaDataProvider">
            <summary>
            Main class for providing metadata for the app or library
            </summary>
        </member>
        <member name="M:DealOrNoDeal.DealOrNoDeal_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.Type)">
            <summary>
            GetXamlType(Type)
            </summary>
        </member>
        <member name="M:DealOrNoDeal.DealOrNoDeal_XamlTypeInfo.XamlMetaDataProvider.GetXamlType(System.String)">
            <summary>
            GetXamlType(String)
            </summary>
        </member>
        <member name="M:DealOrNoDeal.DealOrNoDeal_XamlTypeInfo.XamlMetaDataProvider.GetXmlnsDefinitions">
            <summary>
            GetXmlnsDefinitions()
            </summary>
        </member>
    </members>
</doc>
